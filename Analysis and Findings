---
title: A \textcolor{CadetBlue}{S}\textcolor{SeaGreen}{p}\textcolor{Periwinkle}{l}\textcolor{Apricot}{a}\textcolor{SkyBlue}{s}\textcolor{pink}{h} of Expedia Search Patterns!
author: "Malaikah Hussain, Hannah Pan & Julie Tang - Group 5"
subtitle: \textcolor{black}{Kindly Fasten Your Seatbelts}
date: March 31, 2022
output: 
  beamer_presentation:
    theme: "Pittsburgh"
    colortheme: "orchid"
    fonttheme: "structurebold"
    slide_level: 2
classoption: "aspectratio=169"
fontsize: 11pt
urlcolor: blue
---
```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
expedia_data <- read_csv("ExpediaSearchData.csv")
```


## Research Question 1: Introduction
\begin{center}
\textbf{\textcolor{Blue}{TripAdvisor}} claims 45\% of travelers with a smartphone use their mobiles to book their travel itinerary. Does
\textbf{\textcolor{Blue}{Expedia}} have the same proportion of mobile users?
\end{center}

With the rise of mobile usage, it is important to understand the **percentage of Expedia users** that actually use their mobile platform.  This can give an indication of a potential preference between platforms and reveals how Expedia's mobile platform compares to competitors such as TripAdvisor.




## RQ1: Objective & Data Summary

### Objective
Using a sample of searches on Expedia, we would like to determine whether or not the true proportion of mobile searches is 45% of the overall searches. In particular, we are exploring the question: **Is the proportion of mobile searches performed on Expedia's mobile platform 45% of the total searches?**

### Data Summary 

**\textcolor{Blue}{Data Wrangling}**: Since we will only be using the variable `is_mobile`, to make the data frame simpler, all other variables have been removed.
```{r, eval=TRUE, include=FALSE}
# PREPARING THE DATA
# Create a new data frame with only the is_mobile variable.
library(tidyverse)
library(knitr)
opts_chunk$set(warning = FALSE, message = FALSE)

expedia_data <- read_csv("ExpediaSearchData.csv")
mobile_data <- expedia_data %>% select(is_mobile)
```




## RQ1: Visualization 
```{r, echo=FALSE, fig.height=1.7, fig.width=5, fig.align='center'}
mobile_data %>% 
  mutate(is_mobile2 = case_when(is_mobile == 1 ~ 'True',
                                is_mobile == 0 ~ 'False')) %>%
  ggplot(aes(x=is_mobile2, fill=is_mobile2)) +
  geom_bar() +
  scale_fill_manual(values=c("#1C4476", "#FFD51A")) +
  labs(x= "Whether Search is Done on Mobile", subtitle = "Fig. 1: Proportion of Mobile and Non-Mobile Users", fill = "Is mobile?", color = "Is mobile?")
```
**Bar Graph**:
Displays the proportion of searches done on mobile in comparison to other platforms for our sample data. From this, we can estimate that mobile searches comprise around 40% of the total searches in our data. This is likely possible under the null hypothesis and means that the true proportion of overall mobile searches could be 45%, but must be tested further.




## RQ1: Statistical Methods

**\textcolor{Blue}{Hypothesis Testing}**: A statistical method which involves evaluating evidence against a value for a **parameter** (number that describes the population). In our case we are assessing the **hypothesis** (called the null hypothesis) that the proportion of mobile searches **(parameter)** is equal to 45% **(value)**. 

### Hypothesis Testing Steps
1. Find the proportion of mobile searches for the Expedia sample data.
2. Simulate more samples under the null hypothesis and find the proportion of mobile searches for each of the samples.
3. Evaluate evidence against the null hypothesis.




## RQ1: Results 
```{r results, echo=FALSE, message=FALSE, warning=FALSE, fig.show='hide', results='hide'}
library(tidyverse)
library(knitr)
opts_chunk$set(warning = FALSE, message = FALSE)

expedia_data <- read_csv("ExpediaSearchData.csv")
mobile_data <- expedia_data %>% select(is_mobile)

# Step 1: Find test statistic
num_obs_data = as.numeric(mobile_data %>% summarize(n = n()))
num_mobile <- mobile_data %>% 
  filter(is_mobile == 1) %>% 
  summarise(n = n())
  
test_stat <-  as.numeric(num_mobile) / num_obs_data

# Step 2: Simulate under null hypothesis
set.seed(523)
repetitions <- 1000;
simulated_values <- rep(NA, repetitions)
n_observations <- 100
  
for(i in 1:repetitions){
  new_sim <- sample(c("yes", "no"), 
                    size = n_observations,
                    prob = c(0.45, 0.55),
                    replace = TRUE)

  sim_p <- sum(new_sim == "yes") / n_observations
  
  simulated_values[i] <- sim_p 
}

sim <- tibble(p_mobile = simulated_values)

sim %>% ggplot(aes(x=p_mobile)) + 
  geom_histogram(binwidth=0.01, color="black", fill="gray") +
  geom_vline(xintercept = 0.45 - abs(0.45 - test_stat), color="red") +
  geom_vline(xintercept = 0.45 + abs(0.45 - test_stat), color="blue") +
  xlab("Simulated Proportion of Mobile Users Based on a Sample Size of 100
       (p_mobile = 0.45)")

# Step 3: Evaluate evidence against null hypothesis
p_value <- sim %>%  
  filter(abs(p_mobile - 0.45) >= abs(test_stat - 0.45)) %>% 
  summarize(p_value = n() / repetitions)
p_value
```

- The sample data of overall Expedia searches gives us a proportion 40.2% mobile users. 
- After conducting hypothesis testing, we find that the probability of more extreme values than the test statistic under the null hypothesis is 0.358. 
- Since it is over 0.10, we have no evidence to reject the hypothesis that the proportion of mobile users is 45%.
- From this we can conclude that Expedia may have a similar proportion of mobile users to its competitors like TripAdvisor.




## Research Question 2: Introduction and Objective
\definecolor{Expediablue}{rgb}{0, 0.20784, 0.37254} 
\definecolor{Expediayellow}{rgb}{0.93333, 0.76078, 0.09412}

- \textbf{\textcolor{Expediablue}{Expedia}} users undoubtedly consider both **review score** and **number of reviews** when picking a listing.
- Important to know the relationship between the number of reviews and the review score of a listing, as this can provide a pattern of the choices of listings of \textbf{\textcolor{Expediablue}{Expedia}} users.




### RESEARCH QUESTION 2
What is the association between the **number of reviews** and the mean customer **review score**? 

- **\textcolor{Black}{Number of Reviews}**: The quantity of reviews per listing, to the nearest 25.
- **\textcolor{Black}{Review Score}**: The mean customer review score for the listed property on a scale from 0 to 5, rounded to nearest integer. 0 means that there are no reviews. 




## RQ2: Data Summary
**\textcolor{Blue}{Data Wrangling}**: Since we are interested in a dataset containing **unique** listing review scores and number of reviews, the given dataset was cleaned to only include observations of this precondition.

Out of the **3000** customer searches (1000 per 3 listings), **2618** listings were **unique**.


### Data Wrangling Steps
1. We create a new dataset containing the original column **destination of listing**, and combine the **star rating**, **review score**, and **review count** of the 1st, 2nd, and 3rd listings into 3 columns. Instead of 1+9 columns of 1000 observations, there are now 1+3 columns of 3000 observations.
2. We remove the duplicate rows. The dataset now has 2618 observations.


```{r, eval=TRUE, include=FALSE}
# PREPARING THE DATA
# STEP 1: Keeping only the required columns from each listing, renaming them to be the same name (the rbind() functions requires columns to be the same name in order to combine them)
# 3 tibbles for each listing, star rating (of listing itself), destination, review score, number of reviews
data1 <- expedia_data %>%
  mutate(rating = review_rating1,
         count = review_count1,
         star = star_rating1,
         destination = destination_id) %>%
  select(rating, count, star, destination)
data2 <- expedia_data %>%
  mutate(rating = review_rating2,
         count = review_count2,
         star = star_rating2,
         destination = destination_id) %>%
  select(rating, count, star, destination)
data3 <- expedia_data %>%
  mutate(rating = review_rating3,
         count = review_count3,
         star = star_rating3,
         destination = destination_id) %>%
  select(rating, count, star, destination)
# STEP 2: Combining the three separate tibbles together
expedia_rq2 <- rbind(data1, data2, data3)
# STEP 3: Removing possible duplicate rows, as well as observations with a review score of 0 and no number of reviews
# installing the required library to keep unique observations
library(dplyr)
expedia_rq2_distinct <- expedia_rq2 %>%
  filter(rating != 0 & count != 0) %>%
  distinct()
```



## RQ2: Statistical Methods

**\textcolor{Blue}{Simple Linear Regression}**: A model which uses values from a line of best fit to explain the relationship between the predictor and the response variable. If there is no association, the slope of the fitted line would be 0.


### Simple Linear Regression Steps:
1. Create the scatter plot, where the x-axis (**predictor**) is the number of reviews, and the y-axis (**response variable**) is the review score.
2. Plot and calculate the best fit line, and calculate strength of the correlation between our variables (the **r value**).
3. Create the summary table, the equation of the fitted line, and evaluate the **null hypothesis**. The result is determined by the **p-value**, which measures the strength of evidence against the null hypothesis.





## RQ2: Results

```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.height=2.5, fig.width=4, fig.align='center'}
# STEP 1: Creating the scatter plot with the line of best fit
expedia_rq2_distinct %>%  ggplot(aes(x=count, y=rating)) +
  geom_point() +
  labs(subtitle="Fig. 2: Number of Reviews vs. Review Score",
       x="Number of Reviews",
       y="Review Score") +
geom_smooth(se=FALSE, method="lm") +
theme_minimal()
```

The equation of the fitted line is $y = 4.20 - 3.02 \cdot 10^{-6}x$, the strength of the linear association is $-0.012$, and the p-value is $0.55$.

```{r, eval=TRUE, include=FALSE, echo=FALSE, message=FALSE, warning=FALSE}
# STEP 2: Calculating the r value
cor(x = expedia_rq2_distinct$count,
    y = expedia_rq2_distinct$rating)
# r value: -0.01173004
# STEP 3: Creating the summary table
model1 <-lm(rating ~ count,
            data = expedia_rq2_distinct)
summary(model1)$coefficients
# from summary table:
# intercept: estimate (4.199467), p-value (0.00)
# count: estimate(-3.024987e-06), p-value (0.5485609)
```




## RQ2: Results
- Null hypothesis: the slope of the fitted line is equal to 0. 
- P-value indicates that there is no evidence against our null hypothesis, aligns with our slope of approximately 0. 
- Strength of correlation is close to 0, showing that there is little to no correlation between the predictor and response variable. 
- This mirrors our conclusion drawn from the summary table, as a slope of 0 means that the predictor does not affect the response variable in any way.

**\textcolor{Blue}{Implications}**: 

- A bit surprising, results show that those two variables may not have been affecting one another as much as anticipated. 
- For the future, weights could be added in order to improve the algorithm: an 'overall rating' calculated from a sample equation (0.5 x number of reviews) + (0.5 x review score).





## Research Question 3: Introduction and Objective

### Pay-Per-Click
**\textcolor{Blue}{Expedia}** uses a PCP marketing model whereby **\textcolor{Blue}{Expedia}** receives monetization from the advertiser per customer's click on the listing ad. Determining the possible **average number of reviews** that travel ads receive **reveals** the **effectiveness** of these ads on the quantity of reviews **\textcolor{Blue}{Expedia}** listings receive.

### Research Question 3
What is the **range of plausible values** for the average **number of reviews** for **\textcolor{Blue}{Expedia}** property listings that are **travel advertisements**? 

- **\textcolor{Black}{Plausible Values}**: An interval of the form (x, y) where the original mean number of review value may lie   
- **\textcolor{Black}{Number of Reviews}**: The quantity of reviews per travel ad, rounded to the nearest 25 
- **\textcolor{Black}{Travel Ads}**: Listings labeled as "Ad"




## RQ3: Data Summary 

**\textcolor{Blue}{Data Wrangling}**: Since rows in the dataset are **customer searches** and the RQ is interested in the **listings**, the data was cleaned to identify unique **listings** from the 1000 searches. 

\begin{center}
Out of the \textbf{2618} \textcolor{Blue}{Expedia} listings \textbf{902} were travel ads.
\end{center}




### Data Wrangling Steps 
1. The dataset is cleaned to obtain **listings** from the given 1000 customer **searches**.
2. Similar values across **star rating**, **review score**, **review count** and **destination address** imply duplicate listings and are eliminated from the dataset.
3. The dataset is filtered to only include listings that are ads (`travel_ad == 1`) to generate a dataset with 902 rows named `review_rating_902`.

```{r eval=TRUE, include=FALSE}
# DATA WRANGLING 

# STEP 1: Keeping only the required columns from each listing, renaming them to be the same name (the rbind() functions requires columns to be the same name in order to combine them)
# 3 tibbles for each listing with columns: review rating, review count, star rating (of listing itself), destination & travel ad 
data1 <- expedia_data %>%
  mutate(rating = review_rating1,
         count = review_count1,
         star = star_rating1,
         destination = destination_id,
         travel = is_travel_ad1) %>% 
  select(rating, count, star, destination, travel)

data2 <- expedia_data %>%
  mutate(rating = review_rating2,
         count = review_count2,
         star = star_rating2,
         destination = destination_id,
         travel = is_travel_ad2) %>%
  select(rating, count, star, destination, travel)

data3 <- expedia_data %>%
  mutate(rating = review_rating3,
         count = review_count3,
         star = star_rating3,
         destination = destination_id,
         travel = is_travel_ad3) %>%
  select(rating, count, star, destination, travel)


# STEP 2: Combining the three separate tibbles together through rbind()
expedia_rq2 <- rbind(data1, data2, data3)

# STEP 3: Removing possible duplicate rows, as well as observations with a review score of 0, no number of reviews and travel ads (1 = "yes")
# installing the required library to keep unique observations
library(dplyr)
expedia_rq2_distinct <- expedia_rq2 %>%
  filter(rating != 0 & count != 0 & travel == 1) %>%
  distinct()

expedia_rq2_distinct

#STEP 4: Select only "count" column 
travel_reviews_902 <- expedia_rq2_distinct %>% select(count) %>% rowid_to_column()

travel_reviews_902
```




## RQ3: Statistical Methods

**\textcolor{Blue}{Bootstrapping}**: A statistical method which involves the random re-sampling of data values from the original sample to obtain a **range of plausible** values of the population statistic.

### Bootrapping Steps
1. A *sample* of our sample data `travel_reviews_902` is taken with replacement
2. The mean of the bootstrap sample data values/`review counts` is calculated
3. Step 1. and 2. is repeated 5000 times to get a *distribution* of bootstrapped means 
4. The 2.5th to 97.5th percentile of the mean values is calculated, revealing the interval




## RQ3: Results

```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.height=2.5, fig.width=5.5, fig.align='center'}
### Change size of text of titles
small <- theme(plot.subtitle = element_text(size=(5)))

### VISUALIZATION

#Step 1: Plot a boxplot with the outliers
ggp1 <- ggplot(data = travel_reviews_902, aes(x = "", y = count)) + geom_boxplot(colour = "black", fill = "gold1") + labs(y = "Number of Reviews", x = "Travel Ads", subtitle = "Fig. 3: Distribution of Review Counts for Travel Ads") + small
  
#Step 2: Plot a boxplot without the outliers with filter()
new_travel_reviews_902 <- travel_reviews_902 %>% filter(count < 3000)
ggp2 <- ggplot(data = new_travel_reviews_902, aes(x = "", y = count)) + geom_boxplot(colour = "black", fill = "gold1") + labs(y = "Number of Reviews", x = "Travel Ads", subtitle = "Fig. 4: Distribution of Review Counts for Travel Ads (count < 3000)") + small

#Step 3: Install new package to display graphs side by side (Ar, 2016).
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org/"
options(repos = r)
install.packages("gridExtra")
library("gridExtra")
grid.arrange(ggp1, ggp2, ncol = 2)
```


```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.height=2, fig.width=4, fig.show='hide', results='hide'}
### BOOTSTRAP SAMPLING

#Step 1: Bootstrap sampling distribution for the mean review count
set.seed(564)

boot_means <- rep(NA, 0)
for (i in 1:5000){
  boot_samp <- travel_reviews_902 %>% sample_n(size=902, replace=TRUE)
  boot_means[i] <-
    as.numeric(boot_samp %>% 
                 summarize(mean_review_count = mean(count)))
}
boot_means <- tibble(mean_review_count = boot_means)

#Step 2: Sampling Distribution
ggplot(data = boot_means, aes(x = mean_review_count)) + 
  geom_histogram(colour = "black", fill = "goldenrod1", bins = 30) + 
  labs(x = "Means from samples of size 905")

#Step 3: Calculate where the middle 95% of the values lie (2.5th and 97.5th percentiles)
quantile(boot_means$mean_review_count, c(0.025, 0.975))
```




## RQ3: Results
\begin{center}
\textbf{The range of plausible values for the average number of reviews for Expedia property listings that are travel advertisements is (1168, 1479)}
\end{center}

### Boxplot Description:
1. While 50% of the distribution lie near the 400 to 1000 range, the extreme outliers display the variability of the data. This means that in the process of bootstrapping, some samples may contain a higher proportion of outliers, being unrepresentative of the overall population.
2. All listings that have reviews greater than 2000 are outliers. \

### Confidence
Compared to the range of the values in the dataset, the 95% **Confidence Interval** is narrow (small), implying that if we got a different sample from the population, we could expect to get a similar value for the estimated mean.





## Limitations of Approach / Model 
1. **RQ 1**: Hypothesis testing only allows for evaluating evidence against the null hypothesis but cannot tell the true value of a proportion. Thus, for the conclusion, since there was not enough evidence to conclude the proportion of mobile users is not 45% it could very well be but it also could be a range of other values. 
2. **RQ 2**: Non-continuous parameters were used for both the predictor and the response variable of the linear regression.
3. **RQ 2/3**: The method to remove possible duplicates is error-prone, and does not take into account that the review scores and the numbers of reviews of listings can change over time.




## Conclusion
### Summary of Findings:
1. Expedia may have a similar proportion of mobile users to its competitors like TripAdvisor.
2. There is little to no association between the number of reviews and the review score of a listing. 
3. We are 95% confident that the mean review count for listings that are advertisements is between 1168 and 1479.




## References and Acknowledgements

The authors would like to thank **Maya**, **Ziming**, **Nayan**, **Chris**, and **Nick M.** for their helpful suggestions and comments that improved the presentation of this poster.

Ar, R., Scoa. (2016, December 1). Install.packages fails in knitr document: "trying to use cran without setting a mirror". Stack Overflow. Retrieved March 31, 2022, from https://stackoverflow.com/questions/33969024/install-packages-fails-in-knitr-document-trying-to-use-cran-without-setting-a

TripAdvisor study reveals 42% of travelers worldwide use smartphones to plan or book their trips. Tripadvisor. (2015, June 30). Retrieved March 29, 2022, from https://ir.tripadvisor.com/news-releases/news-release-details/tripadvisor-study-reveals-42-travelers-worldwide-use-smartphones



